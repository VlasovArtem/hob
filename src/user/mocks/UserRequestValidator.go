// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	model "github.com/VlasovArtem/hob/src/user/model"
	mock "github.com/stretchr/testify/mock"
)

// UserRequestValidator is an autogenerated mock type for the UserRequestValidator type
type UserRequestValidator struct {
	mock.Mock
}

// ValidateCreateRequest provides a mock function with given fields: request
func (_m *UserRequestValidator) ValidateCreateRequest(request model.CreateUserRequest) error {
	ret := _m.Called(request)

	var r0 error
	if rf, ok := ret.Get(0).(func(model.CreateUserRequest) error); ok {
		r0 = rf(request)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ValidateUpdateRequest provides a mock function with given fields: request
func (_m *UserRequestValidator) ValidateUpdateRequest(request model.UpdateUserRequest) error {
	ret := _m.Called(request)

	var r0 error
	if rf, ok := ret.Get(0).(func(model.UpdateUserRequest) error); ok {
		r0 = rf(request)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewUserRequestValidator interface {
	mock.TestingT
	Cleanup(func())
}

// NewUserRequestValidator creates a new instance of UserRequestValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUserRequestValidator(t mockConstructorTestingTNewUserRequestValidator) *UserRequestValidator {
	mock := &UserRequestValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
