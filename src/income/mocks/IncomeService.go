// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	model "github.com/VlasovArtem/hob/src/income/model"

	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// IncomeService is an autogenerated mock type for the IncomeService type
type IncomeService struct {
	mock.Mock
}

// Add provides a mock function with given fields: request
func (_m *IncomeService) Add(request model.CreateIncomeRequest) (model.IncomeResponse, error) {
	ret := _m.Called(request)

	var r0 model.IncomeResponse
	if rf, ok := ret.Get(0).(func(model.CreateIncomeRequest) model.IncomeResponse); ok {
		r0 = rf(request)
	} else {
		r0 = ret.Get(0).(model.IncomeResponse)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model.CreateIncomeRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FindByHouseId provides a mock function with given fields: id
func (_m *IncomeService) FindByHouseId(id uuid.UUID) []model.IncomeResponse {
	ret := _m.Called(id)

	var r0 []model.IncomeResponse
	if rf, ok := ret.Get(0).(func(uuid.UUID) []model.IncomeResponse); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.IncomeResponse)
		}
	}

	return r0
}

// FindById provides a mock function with given fields: id
func (_m *IncomeService) FindById(id uuid.UUID) (model.IncomeResponse, error) {
	ret := _m.Called(id)

	var r0 model.IncomeResponse
	if rf, ok := ret.Get(0).(func(uuid.UUID) model.IncomeResponse); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(model.IncomeResponse)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uuid.UUID) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
