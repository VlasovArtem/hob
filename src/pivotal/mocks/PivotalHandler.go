// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// PivotalHandler is an autogenerated mock type for the PivotalHandler type
type PivotalHandler struct {
	mock.Mock
}

// FindByGroupId provides a mock function with given fields:
func (_m *PivotalHandler) FindByGroupId() http.HandlerFunc {
	ret := _m.Called()

	var r0 http.HandlerFunc
	if rf, ok := ret.Get(0).(func() http.HandlerFunc); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(http.HandlerFunc)
		}
	}

	return r0
}

// FindByHouseId provides a mock function with given fields:
func (_m *PivotalHandler) FindByHouseId() http.HandlerFunc {
	ret := _m.Called()

	var r0 http.HandlerFunc
	if rf, ok := ret.Get(0).(func() http.HandlerFunc); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(http.HandlerFunc)
		}
	}

	return r0
}

type mockConstructorTestingTNewPivotalHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewPivotalHandler creates a new instance of PivotalHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPivotalHandler(t mockConstructorTestingTNewPivotalHandler) *PivotalHandler {
	mock := &PivotalHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
